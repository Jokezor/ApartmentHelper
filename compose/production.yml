version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_caddy: {}
  production_static: {}
  production_media: {}

services:
  django: &django
    build:
      context: ..
      dockerfile: ./docker/production/django/Dockerfile
    image: apartmenthelper_production_django
    deploy:
      replicas: 2
    depends_on:
      - postgres
      - redis
    volumes:
      - production_static:/app/apartmenthelper/static-root
      - production_media:/app/apartmenthelper/media-root
      - ../django:/app:delegated
    env_file:
      - .envs/.production/.django
      - .envs/.production/.postgres
      - .envs/.production/.redis
    command: /start

  postgres:
    build:
      context: ..
      dockerfile: docker/production/postgres/Dockerfile
    image: apartmenthelper_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - .envs/.production/.postgres

  caddy:
    build:
      context: ..
      dockerfile: docker/production/caddy/Dockerfile
      args:
        build_script: build-production
    image: apartmenthelper_production_caddy
    depends_on:
      - django
    volumes:
      - production_caddy:/root/.caddy
      - production_static:/srv/static
      - production_media:/srv/media
    env_file:
      - .envs/.production/.caddy
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"

  redis:
    build:
      context: ..
      dockerfile: docker/production/redis/Dockerfile
    image: apartmenthelper_production_redis
    env_file:
      - .envs/.production/.redis

  celeryworker:
    <<: *django
    deploy:
      replicas: 1
    image: apartmenthelper_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    deploy:
      replicas: 1
    image: apartmenthelper_production_celerybeat
    command: /start-celerybeat

  # celeryflower:
  #   <<: *django
  #   deploy:
  #     replicas: 1
  #   image: apartmenthelper_production_celeryflower
  #   command: /start-celeryflower
